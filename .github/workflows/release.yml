# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Orchestrator Release

on:
  push:
    branches: [ master ]
  workflow_dispatch:
    inputs:
        version:
          description: Bump Version
          required: false
        dryRun:
          description: Dry run 
          default: ""
          required: false

jobs:
  generateAPIDefinitions:
    runs-on: ubuntu-latest
    env:
        GITHUB_SERVER_URL: https://code.hq.twilio.com
        GITHUB_API_URL: https://code.hq.twilio.com
    strategy:
      matrix:
        node-version: [10.x]
    steps:
    - run: export GITHUB_SERVER_URL = https://code.hq.twilio.com
    - run: env
    - name: Checkout private tools
      uses: actions/checkout@v2
      with:
        repository: lrimmalapudi/yps
        token: ${{ secrets.YPS_TOKEN }} # `GitHub_PAT` is a secret that contains your PAT
        path: main
    - run: pwd
#   build:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         node-version: [10.x]
#     steps:
#     - uses: actions/checkout@v2
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v2
#       with:
#         node-version: ${{ matrix.node-version }}
#         cache: 'npm'
#     - run: npm ci
#     - run: npm test
#   release:
#     runs-on: ubuntu-latest
#     needs: [build]
#     steps:
#     - uses: actions/checkout@v2
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v2
#       with:
#         node-version: ${{ matrix.node-version }}
#         cache: 'npm'
#     - run: npm ci
#     - run: npx semantic-release ${{github.event.inputs.dryRun}}
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         NPM_TOKEN: ${{ secrets.NPM_TOKEN_DUMMY }}
#   oclifRelease:
#     name: Publish for ${{ matrix.os }}
#     runs-on: ${{ matrix.os }}
#     needs: [build]
#     strategy:
#       fail-fast: false
#       matrix:
#         include:
#           - os: ubuntu-latest
#             artifact_name: deb/orchestrator_0.0.0-1_amd64.deb
#             asset_name: orchestrator.deb
#             command_name: sudo oclif-dev pack:deb
#           - os: macos-latest
#             artifact_name: win/orchestrator-v0.0.0-x86.exe
#             asset_name: orchestrator.exe
#             command_name: oclif-dev pack:win
#           - os: macos-latest
#             artifact_name: macos/orchestrator-v0.0.0.pkg
#             asset_name: orchestrator.pkg
#             command_name: oclif-dev pack:macos

#     steps:
#       - uses: actions/checkout@v2
#       - name: 'Get Previous tag'
#         id: previoustag
#         uses: "WyriHaximus/github-action-get-previous-tag@v1"
#         with:
#           fallback: 1.0.0
#       - run: npm cache clear & npm ci
#       - run: npm install -g @oclif/dev-cli
#       - run: |
#             if [ "$RUNNER_OS" == "macOS" ]; then
#               brew install makensis
#             fi
#       - run: ${{ matrix.command_name }}
#       - name: Upload binaries to release
#         uses: svenstaro/upload-release-action@v2
#         with:
#           repo_token: ${{ secrets.GITHUB_TOKEN }}
#           file: dist/${{ matrix.artifact_name }}
#           asset_name: ${{ matrix.asset_name }}
#           tag: ${{ steps.previoustag.outputs.tag }}


